dev.off()
return(ll)
}
plot.ll(model="SIR", param="gamma", values=gamma.vals, data=as.data.frame(simdat[, 1]), N=N)
plot.ll(model="SIR", param="beta", values=beta.vals, data=as.data.frame(simdat[, 1]), N=N)
plot.ll(model="HawkesN", param="K", values=K.vals, data=as.data.frame(simhistory[,1]), N=N)
plot.ll(model="HawkesN", param="theta", values=theta.vals, data=as.data.frame(simhistory[,1]), N=N)
gamma.vals.contour = seq(0.05, 1, by=0.1)
beta.vals.contour = seq(0.1, 5, by=0.5)
K.vals.contour = seq(0.25, 10, by=0.25)
theta.vals.contour = seq(0.05, 1, by=0.05)
gamma.vals.contour
length(gamma.vals.contour)
length(gamma.vals.contour)
length(beta.vals.contour)
model="SIR"
param.x="gamma"
param.y="beta"
values.x=gamma.vals
values.y=beta.vals
data=as.data.frame(simdat[, 1])
if(!(model %in% c("SIR", "HawkesN")) ) {
return("Model choice not SIR or HawkesN")
}
if(!(param.x %in% c("gamma", "beta", "K", "theta"))) {
return("x-axis parameter choice not one of: gamma, beta, K, or theta")
}
if(!(param.y %in% c("gamma", "beta", "K", "theta"))) {
return("y-axis parameter choice not one of: gamma, beta, K, or theta")
}
n.x = length(values.x)
n.y = length(values.y)
ll = matrix(numeric(n.x * n.y), nrow = n.y, ncol = n.x)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[i,j] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
}
ll
din(ll)
di(ll)
dim(ll)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals, values.y=beta.vals, data=as.data.frame(simdat[, 1]), N=N)
gamma.vals.contour = seq(0.01, 1, by=0.1)
beta.vals.contour = seq(0.1, 5, by=0.5)
K.vals.contour = seq(1, 10, by=1)
gamma.vals.contour = seq(0.1, 1, by=0.1)
beta.vals.contour = seq(0.1, 5, by=0.5)
K.vals.contour = seq(1, 10, by=1)
theta.vals.contour = seq(0.1, 1, by=0.1)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals, values.y=beta.vals, data=as.data.frame(simdat[, 1]), N=N)
gamma.vals.contour = seq(0.1, 1, by=0.1)
beta.vals.contour = seq(0.5, 5, by=0.5)
K.vals.contour = seq(1, 10, by=1)
theta.vals.contour = seq(0.1, 1, by=0.1)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals, values.y=beta.vals, data=as.data.frame(simdat[, 1]), N=N)
length(gamma.vals.contour)
length(beta.vals.contour)
values.x=gamma.vals
values.y=beta.vals
n.x = length(values.x)
n.y = length(values.y)
ll = matrix(numeric(n.x * n.y), nrow = n.y, ncol = n.x)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[i,j] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
}
if(model == "HawkesN") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[j,i] = neg.log.likelihood(params=params, history=data, N=N)
}
}
}
filename = paste0("/Users/sarahmasri/Desktop/Research/MSc/SIR-Hawkes-Comparison/figures/",
model,
"_contour-plot_",
param.x,
"_",
param.y,
".png"
)
png(
filename,
width     = 3.25,
height    = 3.25,
units     = "in",
res       = 1200,
pointsize = 4
)
par(
mar      = c(5, 5, 2, 2),
xaxs     = "i",
yaxs     = "i",
cex.axis = 2,
cex.lab  = 2
)
filled.contour(
x = values.x,
y = values.y,
z = ll,
plot.axes={
axis(1,cex.axis=1)
axis(2,cex.axis=1)
},
plot.title={
title(xlab=param.x,cex.lab=1.5)
mtext(param.y,2,cex=1.5,line=3,las=0)
},
key.title = {par(cex.main=0.7);title(main="Negative\n Log\n-Likelihood")},
)
values.x
values.y
length(values.x)
gamma.vals
length(gamma.vals)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, beta.vals.contour=beta.vals, data=as.data.frame(simdat[, 1]), N=N)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
gamma.vals.contour = seq(0.1, 1, by=0.01)
beta.vals.contour = seq(0.5, 5, by=0.05)
length(gamma.vals.contour)
gamma.vals.contour = seq(0.05, 1, by=0.05)
beta.vals.contour = seq(0.05, 5, by=0.05)
length(gamma.vals.contour)
gamma.vals.contour = seq(1/50, 1, by=1/50)
beta.vals.contour = seq(5/50, 5, by=5/50)
K.vals.contour = seq(10/50, 10, by=10/50)
theta.vals.contour = seq(1/50, 1, by=1/50)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
gamma.vals.contour = seq(1/5, 1, by=1/5)
beta.vals.contour = seq(5/5, 5, by=5/5)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
## Create a contour plot of negative log likelihoods for two specified params
contour.plot.ll <- function(model, param.x, param.y, values.x, values.y, data, N=getN()) {
if(!(model %in% c("SIR", "HawkesN")) ) {
return("Model choice not SIR or HawkesN")
}
if(!(param.x %in% c("gamma", "beta", "K", "theta"))) {
return("x-axis parameter choice not one of: gamma, beta, K, or theta")
}
if(!(param.y %in% c("gamma", "beta", "K", "theta"))) {
return("y-axis parameter choice not one of: gamma, beta, K, or theta")
}
n.x = length(values.x)
n.y = length(values.y)
ll = matrix(numeric(n.x * n.y), nrow = n.y, ncol = n.x)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[i,j] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
}
if(model == "HawkesN") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[j,i] = neg.log.likelihood(params=params, history=data, N=N)
}
}
}
filename = paste0("/Users/sarahmasri/Desktop/Research/MSc/SIR-Hawkes-Comparison/figures/",
model,
"_contour-plot_",
param.x,
"_",
param.y,
".png"
)
png(
filename,
width     = 4,
height    = 4,
units     = "in",
res       = 1200,
pointsize = 4
)
par(
mar      = c(5, 5, 2, 2),
xaxs     = "i",
yaxs     = "i",
cex.axis = 2,
cex.lab  = 2
)
filled.contour(
x = values.x,
y = values.y,
z = ll,
plot.axes={
axis(1,cex.axis=1)
axis(2,cex.axis=1)
},
plot.title={
title(xlab=param.x,cex.lab=1.5)
mtext(param.y,2,cex=1.5,line=3,las=0)
},
key.title = {par(cex.main=0.7);title(main="Negative\n Log\n-Likelihood")},
)
dev.off()
return(ll)
}
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
#' plot likelihood against a set of parameter values
plot.ll <- function(model, param, values, data, N=getN()) {
if(!(model %in% c("SIR", "HawkesN")) ) {
return("Model choice not SIR or HawkesN")
}
if(!(param %in% c("gamma", "beta", "K", "theta"))) {
return("Parameter choice not one of: gamma, beta, K, or theta")
}
n = length(values)
ll = numeric(n)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n) {
params[param] = values[i]
ll[i] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
if(model == "HawkesN") {
for(i in 1:n) {
params[param] = values[i]
ll[i] =  neg.log.likelihood(params=params, history=data, N = N)
}
}
df = data.frame(values, ll)
filename = paste0("/Users/sarahmasri/Desktop/Research/MSc/SIR-Hawkes-Comparison/figures/",
model,
"_neg-log-likelihood-plot_",
param,
".png"
)
png(
filename,
width     = 5,
height    = 5,
units     = "in",
res       = 1200,
pointsize = 4
)
par(
mar      = c(5, 5, 2, 2),
xaxs     = "i",
yaxs     = "i",
cex.axis = 2,
cex.lab  = 2
)
plot <- ggplot(df, aes(x=values, y=ll)) + geom_point() +
geom_hline(yintercept = min(ll), linetype = "dashed") +
#geom_vline(xintercept = get.theoretical.params(model)[param], color = "blue", linewidth = 1.5) +
geom_vline(xintercept = values[which.min(ll)], color = "firebrick", linewidth = 1) +
xlab(param) +
ylab("Negative Log Likelihood") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme_bw() +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
print(plot)
dev.off()
return(ll)
}
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
## Create a contour plot of negative log likelihoods for two specified params
contour.plot.ll <- function(model, param.x, param.y, values.x, values.y, data, N=getN()) {
if(!(model %in% c("SIR", "HawkesN")) ) {
return("Model choice not SIR or HawkesN")
}
if(!(param.x %in% c("gamma", "beta", "K", "theta"))) {
return("x-axis parameter choice not one of: gamma, beta, K, or theta")
}
if(!(param.y %in% c("gamma", "beta", "K", "theta"))) {
return("y-axis parameter choice not one of: gamma, beta, K, or theta")
}
n.x = length(values.x)
n.y = length(values.y)
ll = matrix(numeric(n.x * n.y), nrow = n.y, ncol = n.x)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[i,j] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
}
if(model == "HawkesN") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[j,i] = neg.log.likelihood(params=params, history=data, N=N)
}
}
}
filename = paste0("/Users/sarahmasri/Desktop/Research/MSc/SIR-Hawkes-Comparison/figures/",
model,
"_contour-plot_",
param.x,
"_",
param.y,
".png"
)
png(
filename,
width     = 4,
height    = 4,
units     = "in",
res       = 1200,
pointsize = 4
)
par(omi = c(0,0,0,0), mgp = c(0,0,0), mar = c(0,0,0,0), family = "D")
par(mfrow = c(1, 1), cex = 1, cex.lab = 0.75, cex.main = 0.2, cex.axis = 0.2)
filled.contour(
x = values.x,
y = values.y,
z = ll,
plot.axes={
axis(1,cex.axis=1)
axis(2,cex.axis=1)
},
plot.title={
title(xlab=param.x,cex.lab=1.5)
mtext(param.y,2,cex=1.5,line=3,las=0)
},
key.title = {par(cex.main=0.7);title(main="Negative\n Log\n-Likelihood")},
)
show()
dev.off()
return(ll)
}
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
## Create a contour plot of negative log likelihoods for two specified params
contour.plot.ll <- function(model, param.x, param.y, values.x, values.y, data, N=getN()) {
if(!(model %in% c("SIR", "HawkesN")) ) {
return("Model choice not SIR or HawkesN")
}
if(!(param.x %in% c("gamma", "beta", "K", "theta"))) {
return("x-axis parameter choice not one of: gamma, beta, K, or theta")
}
if(!(param.y %in% c("gamma", "beta", "K", "theta"))) {
return("y-axis parameter choice not one of: gamma, beta, K, or theta")
}
n.x = length(values.x)
n.y = length(values.y)
ll = matrix(numeric(n.x * n.y), nrow = n.y, ncol = n.x)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[i,j] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
}
if(model == "HawkesN") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[j,i] = neg.log.likelihood(params=params, history=data, N=N)
}
}
}
filename = paste0("/Users/sarahmasri/Desktop/Research/MSc/SIR-Hawkes-Comparison/figures/",
model,
"_contour-plot_",
param.x,
"_",
param.y,
".png"
)
png(
filename,
width     = 4,
height    = 4,
units     = "in",
res       = 1200,
pointsize = 4
)
par(omi = c(0,0,0,0), mgp = c(0,0,0), mar = c(0,0,0,0), family = "D")
par(mfrow = c(1, 1), cex = 1, cex.lab = 0.75, cex.main = 0.2, cex.axis = 0.2)
plot <- filled.contour(
x = values.x,
y = values.y,
z = ll,
plot.axes={
axis(1,cex.axis=1)
axis(2,cex.axis=1)
},
plot.title={
title(xlab=param.x,cex.lab=1.5)
mtext(param.y,2,cex=1.5,line=3,las=0)
},
key.title = {par(cex.main=0.7);title(main="Negative\n Log\n-Likelihood")},
)
show(plot)
dev.off()
return(ll)
}
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
## Create a contour plot of negative log likelihoods for two specified params
contour.plot.ll <- function(model, param.x, param.y, values.x, values.y, data, N=getN()) {
if(!(model %in% c("SIR", "HawkesN")) ) {
return("Model choice not SIR or HawkesN")
}
if(!(param.x %in% c("gamma", "beta", "K", "theta"))) {
return("x-axis parameter choice not one of: gamma, beta, K, or theta")
}
if(!(param.y %in% c("gamma", "beta", "K", "theta"))) {
return("y-axis parameter choice not one of: gamma, beta, K, or theta")
}
n.x = length(values.x)
n.y = length(values.y)
ll = matrix(numeric(n.x * n.y), nrow = n.y, ncol = n.x)
params = get.theoretical.params(model)
if(model == "SIR") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[i,j] = stochastic.sir.complete.neg.log.likelihood(params=params, state=data, N=N)
}
}
}
if(model == "HawkesN") {
for(i in 1:n.y) {
params[param.y] = values.y[i]
for(j in 1:n.x) {
params[param.x] = values.x[j]
ll[j,i] = neg.log.likelihood(params=params, history=data, N=N)
}
}
}
filename = paste0("/Users/sarahmasri/Desktop/Research/MSc/SIR-Hawkes-Comparison/figures/",
model,
"_contour-plot_",
param.x,
"_",
param.y,
".png"
)
png(
filename,
width     = 4,
height    = 4,
units     = "in",
res       = 1200,
pointsize = 4
)
filled.contour(
x = values.x,
y = values.y,
z = ll,
plot.axes={
axis(1,cex.axis=1)
axis(2,cex.axis=1)
},
plot.title={
title(xlab=param.x,cex.lab=1.5)
mtext(param.y,2,cex=1.5,line=3,las=0)
},
key.title = {par(cex.main=0.7);title(main="Negative\n Log\n-Likelihood")},
)
dev.off()
return(ll)
}
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
gamma.vals.contour = seq(1/50, 1, by=1/50)
beta.vals.contour = seq(5/50, 5, by=5/50)
K.vals.contour = seq(10/50, 10, by=10/50)
theta.vals.contour = seq(1/50, 1, by=1/50)
contour.plot.ll(model="SIR", param.x="gamma", param.y="beta",
values.x=gamma.vals.contour, values.y=beta.vals.contour, data=as.data.frame(simdat[, 1]), N=N)
contour.plot.ll(model="HawkesN", param.x="K", param.y="theta",
values.x=K.vals.contour, values.y=theta.vals.contour, data=as.data.frame(simhistory[, 1]), N=N)
